[
    {
        "id": "85e21fcb925ef32f",
        "type": "tab",
        "label": "mirrotron-rfq-vacuum-tray",
        "disabled": false,
        "info": ""
    },
    {
        "id": "40e56362c23599cc",
        "type": "group",
        "z": "85e21fcb925ef32f",
        "name": "Edit Me",
        "style": {
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00",
            "stroke": "#001f60"
        },
        "nodes": [
            "5e7d2de841bcb0c1"
        ],
        "x": 994,
        "y": 19,
        "w": 172,
        "h": 82
    },
    {
        "id": "cc88dacde90c32cd",
        "type": "group",
        "z": "85e21fcb925ef32f",
        "name": "Edit Me",
        "style": {
            "stroke": "#000000",
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "352395cfbb5c4259"
        ],
        "x": 534,
        "y": 599,
        "w": 232,
        "h": 82
    },
    {
        "id": "24d6701c4857e25e",
        "type": "group",
        "z": "85e21fcb925ef32f",
        "name": "Edit Me",
        "style": {
            "stroke": "#001f60",
            "fill": "#9363b7",
            "label": true,
            "label-position": "n",
            "color": "#ffff00"
        },
        "nodes": [
            "fcc98447c16c3949"
        ],
        "x": 94,
        "y": 331.5,
        "w": 212,
        "h": 97
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a4f4c59daf894823",
        "type": "serial-port",
        "serialport": "$(SERIALPORT)",
        "serialbaud": "19200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "$(SERIALBUFSIZE)",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "2000"
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save tray config in Memory",
        "func": "global.set('settingInProgress', true);\nglobal.set('tray', msg.payload);\nglobal.set('deviceInit', 1);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 60,
        "wires": [
            [
                "5e7d2de841bcb0c1"
            ]
        ]
    },
    {
        "id": "5023092b.a0fe38",
        "type": "mqtt in",
        "z": "85e21fcb925ef32f",
        "name": "Subscribe Settings",
        "topic": "$(MQTTSUBSCRIBE)",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 200,
        "wires": [
            [
                "f812bb6a.1aec68"
            ]
        ]
    },
    {
        "id": "49c7b59e.00e86c",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "read Tray",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "readTraydesc",
        "payload": "MQTTSUBSCRIBE",
        "payloadType": "env",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "f7b2b73c.569598"
            ]
        ]
    },
    {
        "id": "4a8d91e8.fcb68",
        "type": "file in",
        "z": "85e21fcb925ef32f",
        "name": "Read tray config",
        "filename": "tray.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 480,
        "y": 60,
        "wires": [
            [
                "4b0be623.7f7b88"
            ]
        ]
    },
    {
        "id": "4b0be623.7f7b88",
        "type": "json",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 60,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "f7b2b73c.569598",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Init flow Variables",
        "func": "var mqttSplit = msg.payload.split('/');\nvar trayProps = {\n    box         :   mqttSplit[0],\n    type        :   mqttSplit[1],\n    name        :   mqttSplit[2],\n};\nglobal.set('trayProps',trayProps);\nglobal.set('settingInProgress', false);\n\nreturn {topic: 'readFile', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "4a8d91e8.fcb68"
            ]
        ]
    },
    {
        "id": "168ce872.83d788",
        "type": "file",
        "z": "85e21fcb925ef32f",
        "name": "Init Settings",
        "filename": "tray.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1290,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "89892a30.598e28",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save Settings to File",
        "func": "var jsonPretty = JSON.stringify(global.get('tray'),null,2);\nreturn {topic: msg.payload, payload:jsonPretty};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "168ce872.83d788"
            ]
        ]
    },
    {
        "id": "f812bb6a.1aec68",
        "type": "json",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "e0d2b8e49c2e469b"
            ]
        ]
    },
    {
        "id": "c0939e4a.6386f",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "pm2 restart ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Restart",
        "x": 700,
        "y": 1240,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9e290594.69c548",
        "type": "switch",
        "z": "85e21fcb925ef32f",
        "name": "Reset Tray",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 1260,
        "wires": [
            [
                "985cd59b3e414efe"
            ],
            [
                "236a8168.66f7fe"
            ]
        ]
    },
    {
        "id": "236a8168.66f7fe",
        "type": "exec",
        "z": "85e21fcb925ef32f",
        "command": "sudo reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reboot",
        "x": 500,
        "y": 1300,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "557e4f40.b904e",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 1260,
        "wires": [
            [
                "9e290594.69c548"
            ]
        ]
    },
    {
        "id": "5152879001ec63ea",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 1250,
        "y": 340,
        "wires": []
    },
    {
        "id": "99fbe8135d0ce161",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Readings Alarm Scan",
        "func": "var newData = msg.payload;\nvar tray = global.get('tray');\nvar alarmFlagReading = scalarAlarmScan(tray, 'reading');\nvar alarmFlagSetting = scalarAlarmScan(tray, 'setting');\nvar newMsg   = null;\nvar newSettingMsg = null;\nif (msg.topic == 'newSetting')\n{\n    newSettingMsg = \n    {\n        topic: 'newSetting',\n        payload: true\n    }\n};\nif (newData)\n{\n    newMsg = \n    {\n        topic: 'newData',\n        payload: true\n    }\n}\nreturn [newMsg, newSettingMsg];\n\nfunction getActionArray(tray, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(tray);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (tray[keys[ii]].hasOwnProperty('type'))\n        {\n            if (tray[keys[ii]].type == type)\n            {\n                if (tray[keys[ii]].action == actionType)\n                {\n                    actionArray.push(tray[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(tray, actionType)\n{\n    var alarmFlag = false;\n    var actionArray = getActionArray(tray, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            let oldAlarmValue = actionArray[ii].alarm.value;\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n                if (actionArray[ii].alarm.value != oldAlarmValue) alarmFlag = true;\n            }\n        }\n    }\n    return alarmFlag;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastAlarm', -1);",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 640,
        "wires": [
            [
                "f5d0568e288098ed",
                "ef7189156ac81e3c",
                "bad8b154e55bac26"
            ],
            [
                "9f8c3b4630e734a3"
            ]
        ]
    },
    {
        "id": "a1698f8bfcc63203",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "read Status",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "readTable",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "b5aa124df51a8d82"
            ]
        ]
    },
    {
        "id": "4493527757138cdc",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "New Setting In",
        "links": [
            "4bddb9a0e424ebf4"
        ],
        "x": 755,
        "y": 140,
        "wires": []
    },
    {
        "id": "4bddb9a0e424ebf4",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "blinkybus setting in",
        "links": [
            "4493527757138cdc",
            "9f8cc473cc73f355"
        ],
        "x": 55,
        "y": 380,
        "wires": [
            [
                "fcc98447c16c3949"
            ]
        ]
    },
    {
        "id": "f9be9054ce456982",
        "type": "switch",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setting",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "config",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "postMortem",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "4493527757138cdc"
            ],
            [
                "91cded1b31446957"
            ],
            [
                "c81b72b9290d1c36"
            ],
            [
                "72b5ca0e2043aba0"
            ],
            [
                "be17ae16590db703"
            ]
        ]
    },
    {
        "id": "e0d2b8e49c2e469b",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Filter MQTT",
        "func": "return {topic:msg.topic.split('/')[4], payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 200,
        "wires": [
            [
                "f9be9054ce456982"
            ]
        ]
    },
    {
        "id": "b5aa124df51a8d82",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Read BlinkyBus",
        "func": "if (global.get('settingInProgress')) return null;\nif (global.get('deviceInit') != 0) return null;\nreturn {topic: \"readStatus\", payload:true, timeStamp:msg.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 640,
        "wires": [
            [
                "b7fd8744c033e8b3"
            ]
        ]
    },
    {
        "id": "f75b9887786b11c4",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/reading',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "5152879001ec63ea"
            ]
        ]
    },
    {
        "id": "45a97566b65c65cc",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Publish Tray In",
        "links": [
            "0bf699584a2609d5",
            "1e34df4b19ff22cc",
            "6af21e76e0c4ad80",
            "86aff585d6d97f09",
            "91cded1b31446957",
            "a66ef2e5b482662a",
            "df03212a7e41deb1",
            "f0c1e263384a520f",
            "f5d0568e288098ed",
            "3fc0261f194a7067",
            "396e4a58f43bbdef"
        ],
        "x": 955,
        "y": 340,
        "wires": [
            [
                "f75b9887786b11c4"
            ]
        ]
    },
    {
        "id": "f5d0568e288098ed",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Alarm Scan out",
        "mode": "link",
        "links": [
            "45a97566b65c65cc",
            "782a1b48b87cd876"
        ],
        "x": 1255,
        "y": 620,
        "wires": []
    },
    {
        "id": "91cded1b31446957",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Ping Out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 755,
        "y": 180,
        "wires": []
    },
    {
        "id": "a66ef2e5b482662a",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Create Setting out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 355,
        "y": 380,
        "wires": []
    },
    {
        "id": "930b94f38479787c",
        "type": "split",
        "z": "85e21fcb925ef32f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1430,
        "y": 60,
        "wires": [
            [
                "69d1e54394d2fd5e"
            ]
        ]
    },
    {
        "id": "69d1e54394d2fd5e",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1580,
        "y": 60,
        "wires": [
            [
                "742713de179bd6ce"
            ]
        ]
    },
    {
        "id": "c81b72b9290d1c36",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Config Out",
        "links": [
            "720ccfb4b4949146"
        ],
        "x": 755,
        "y": 220,
        "wires": []
    },
    {
        "id": "720ccfb4b4949146",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Pause Tray Readings in",
        "links": [
            "c81b72b9290d1c36"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "b82f13a5e04e195a"
            ]
        ]
    },
    {
        "id": "47de6287cc26419f",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save config file",
        "func": "let cubeAlarm = global.get('tray')[msg.payload.cube].alarm;\ncubeAlarm.limits.lolo = msg.payload.limits.lolo;\ncubeAlarm.limits.low  = msg.payload.limits.low;\ncubeAlarm.limits.high = msg.payload.limits.high;\ncubeAlarm.limits.hihi = msg.payload.limits.hihi;\ncubeAlarm.notify.name = msg.payload.notify.name;\ncubeAlarm.notify.number = msg.payload.notify.number;\nreturn {topic:'trayConfigCompleted', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 520,
        "wires": [
            [
                "eec56d72bdbd1430",
                "501090a1fd5f88f5"
            ]
        ]
    },
    {
        "id": "2cd296fd87868cea",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Continue Tray readings",
        "func": "global.set('settingInProgress',false)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 520,
        "wires": [
            [
                "df03212a7e41deb1"
            ]
        ]
    },
    {
        "id": "04d132d87ffeb91a",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Save Settings to file in",
        "links": [
            "6af21e76e0c4ad80",
            "501090a1fd5f88f5",
            "1e34df4b19ff22cc",
            "75aab98047eea696",
            "344a2a68c26672b2",
            "9f8c3b4630e734a3"
        ],
        "x": 955,
        "y": 420,
        "wires": [
            [
                "89892a30.598e28"
            ]
        ]
    },
    {
        "id": "df03212a7e41deb1",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Continue Devie Readings out",
        "links": [
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 1015,
        "y": 520,
        "wires": []
    },
    {
        "id": "c2d22bcc1f4cf7b0",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "Archive clock",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "20",
        "topic": "archiveClock",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "6a9b2f2af2f7d084"
            ]
        ]
    },
    {
        "id": "6a9b2f2af2f7d084",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Archive Pulse",
        "func": "var tray = global.get('tray');\nvar lastArchive = context.get('lastArchive');\nvar now = new Date().getTime();\nif ((now - lastArchive) <= tray.arcPeriod) return null;\ncontext.set('lastArchive', now);\nreturn {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 780,
        "wires": [
            [
                "d74e019a27b1a659"
            ]
        ]
    },
    {
        "id": "72b5ca0e2043aba0",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Reset Out",
        "links": [
            "6c366c9b4d8b8f19"
        ],
        "x": 755,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c366c9b4d8b8f19",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Reset in",
        "links": [
            "72b5ca0e2043aba0"
        ],
        "x": 55,
        "y": 1260,
        "wires": [
            [
                "557e4f40.b904e"
            ]
        ]
    },
    {
        "id": "1e34df4b19ff22cc",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "nonBlinkybusSetting Out",
        "mode": "link",
        "links": [
            "04d132d87ffeb91a",
            "45a97566b65c65cc",
            "05c0c7b4f59ca88d"
        ],
        "x": 355,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c51c680e18abf95",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Allow Readings",
        "func": "if (msg.payload.address == -1)\n{\n    global.set('settingInProgress',false);\n    global.set('deviceInit', 0);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "961b85c2472cee35",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "begin re-init device",
        "mode": "link",
        "links": [
            "5aebb0b38ba2e191"
        ],
        "x": 855,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5aebb0b38ba2e191",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "read tray config in",
        "links": [
            "961b85c2472cee35"
        ],
        "x": 935,
        "y": 100,
        "wires": [
            [
                "5e7d2de841bcb0c1"
            ]
        ]
    },
    {
        "id": "6af76a294daa96eb",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save flow env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1120,
        "wires": []
    },
    {
        "id": "fc32acfc21c97af1",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "serialBufSize",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "serialBufSize",
        "payload": "SERIALBUFSIZE",
        "payloadType": "env",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "6af76a294daa96eb"
            ]
        ]
    },
    {
        "id": "52b50d7763d10fa2",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Send Setting",
        "func": "global.set('settingInProgress',true);\nvar bufsize = 4;\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\nsettingsView.setUint8(0, 1, true); //setting\nsettingsView.setUint8(1, msg.payload.address, true); //address\nsettingsView.setInt16(2, msg.payload.value, true); //value\nreturn {topic:'setting',payload:Buffer.from(buffer),address:msg.payload.address};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 960,
        "wires": [
            [
                "3026811a11de85fd"
            ]
        ]
    },
    {
        "id": "e023e3fbaf0e8beb",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Get Reading",
        "func": "var bufsize = 4;\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\nsettingsView.setUint8(0, 0, true); //setting\nsettingsView.setUint8(1, 0, true); //address\nsettingsView.setInt16(2, 0, true); //value\n\nreturn {topic:'reading',payload:Buffer.from(buffer),timeStamp:msg.timeStamp};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 1040,
        "wires": [
            [
                "3026811a11de85fd"
            ]
        ]
    },
    {
        "id": "1fc86ac13df1a13f",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Check Reading",
        "func": "var serialBufSize = global.get('serialBufSize');\nvar dataView     = new DataView(new ArrayBuffer(2));\nvar dataBuffer = [];\nfor (var ii = 0; ii < (msg.payload.length / 2); ++ii)\n{\n    for (ib = 0; ib < 2; ++ib)   dataView.setUint8(ib, msg.payload[(ii * 2) + 1 - ib]);\n    dataBuffer.push( dataView.getInt16(0));\n}\nvar topic = 'newReading';\nif (global.get('settingInProgress'))\n{\n    topic = 'newSetting';\n    if (global.get('deviceInit') < 1);\n        global.set('settingInProgress', false)\n}\nglobal.get('tray').timeStamp = new Date().getTime();\nif (dataBuffer[0] == 1)\n{\n    var initDeviceMsg = {topic:\"initDevice\",payload:true};\n    global.set('settingInProgress', true)\n    global.set('deviceInit', 2);\n    return [null, initDeviceMsg];\n}\nreturn [{topic:topic, payload:dataBuffer},null];\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1000,
        "wires": [
            [
                "ed6ec66d5cb48297"
            ],
            [
                "961b85c2472cee35"
            ]
        ]
    },
    {
        "id": "b0f91914917b2de1",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "BlinkyBus Setting In",
        "links": [
            "01598091ca19387c",
            "aa428318895690ee",
            "93758a55568a2f76"
        ],
        "x": 55,
        "y": 960,
        "wires": [
            [
                "52b50d7763d10fa2"
            ]
        ]
    },
    {
        "id": "da43bbc0389c5027",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "BlinkyBus Reading In",
        "links": [
            "6238aa4113faa347",
            "b7fd8744c033e8b3"
        ],
        "x": 55,
        "y": 1040,
        "wires": [
            [
                "e023e3fbaf0e8beb"
            ]
        ]
    },
    {
        "id": "ed6ec66d5cb48297",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "BlinkyBus Reading Out",
        "mode": "link",
        "links": [
            "a3d99d9c796d9231",
            "edafb769c9979256"
        ],
        "x": 855,
        "y": 980,
        "wires": []
    },
    {
        "id": "aa428318895690ee",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Init device setting in",
        "mode": "link",
        "links": [
            "b0f91914917b2de1"
        ],
        "x": 1835,
        "y": 60,
        "wires": []
    },
    {
        "id": "b7fd8744c033e8b3",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Poll BlinkBus In",
        "mode": "link",
        "links": [
            "da43bbc0389c5027"
        ],
        "x": 415,
        "y": 640,
        "wires": []
    },
    {
        "id": "edafb769c9979256",
        "type": "link in",
        "z": "85e21fcb925ef32f",
        "name": "Poll BlinkBus Out",
        "links": [
            "ed6ec66d5cb48297"
        ],
        "x": 515,
        "y": 640,
        "wires": [
            [
                "352395cfbb5c4259"
            ]
        ]
    },
    {
        "id": "93758a55568a2f76",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Tray Setting In",
        "mode": "link",
        "links": [
            "b0f91914917b2de1"
        ],
        "x": 515,
        "y": 340,
        "wires": []
    },
    {
        "id": "ebb5481bd4277b24",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1290,
        "y": 60,
        "wires": [
            [
                "930b94f38479787c"
            ]
        ]
    },
    {
        "id": "742713de179bd6ce",
        "type": "switch",
        "z": "85e21fcb925ef32f",
        "name": "",
        "property": "payload.address",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 60,
        "wires": [
            [
                "aa428318895690ee"
            ],
            [
                "cc28796b6343f69f"
            ]
        ]
    },
    {
        "id": "cc28796b6343f69f",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1880,
        "y": 120,
        "wires": [
            [
                "3c51c680e18abf95"
            ]
        ]
    },
    {
        "id": "10e54acd6f4f5fb4",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "pm2Name",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "pm2Name",
        "payload": "PM2NAME",
        "payloadType": "env",
        "x": 130,
        "y": 1180,
        "wires": [
            [
                "6af76a294daa96eb"
            ]
        ]
    },
    {
        "id": "985cd59b3e414efe",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Get pm2Name",
        "func": "msg.payload = global.get(\"pm2Name\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1240,
        "wires": [
            [
                "c0939e4a.6386f"
            ]
        ]
    },
    {
        "id": "fd6a29d4dda908dd",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "Archive now",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "archiveNow",
        "payloadType": "date",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "76d6712bed883108"
            ]
        ]
    },
    {
        "id": "76d6712bed883108",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Single Archive Pulse",
        "func": "return {topic:'archivePulse', payload:true};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 840,
        "wires": [
            [
                "d74e019a27b1a659"
            ]
        ]
    },
    {
        "id": "7c54db38ef42ea17",
        "type": "inject",
        "z": "85e21fcb925ef32f",
        "name": "project",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "x": 100,
        "y": 1400,
        "wires": [
            [
                "df7945d1e609440c"
            ]
        ]
    },
    {
        "id": "df7945d1e609440c",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Save global env variables",
        "func": "global.set(msg.topic,msg.payload);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1400,
        "wires": []
    },
    {
        "id": "501090a1fd5f88f5",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Save config file out",
        "links": [
            "04d132d87ffeb91a"
        ],
        "x": 715,
        "y": 480,
        "wires": []
    },
    {
        "id": "3744a97333f32473",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 410,
        "y": 340,
        "wires": [
            [
                "93758a55568a2f76"
            ]
        ]
    },
    {
        "id": "eec56d72bdbd1430",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 680,
        "y": 520,
        "wires": [
            [
                "2cd296fd87868cea"
            ]
        ]
    },
    {
        "id": "95bf73e1f0d68181",
        "type": "delay",
        "z": "85e21fcb925ef32f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 520,
        "wires": [
            [
                "47de6287cc26419f"
            ]
        ]
    },
    {
        "id": "b82f13a5e04e195a",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Pause Readings",
        "func": "global.set('settingInProgress',true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 520,
        "wires": [
            [
                "95bf73e1f0d68181"
            ]
        ]
    },
    {
        "id": "45409b1230e854cd",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "Publish Archive",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 760,
        "y": 780,
        "wires": []
    },
    {
        "id": "d74e019a27b1a659",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Publish tray",
        "func": "if (!msg.payload) return null;\nvar tray = global.get('tray');\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/archive',\n    payload: JSON.stringify(tray)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 780,
        "wires": [
            [
                "45409b1230e854cd"
            ]
        ]
    },
    {
        "id": "5e7d2de841bcb0c1",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "g": "40e56362c23599cc",
        "name": "Init Gizmo",
        "func": "var tray = global.get('tray');\nvar deviceInit = global.get('deviceInit');\nif (deviceInit == 1) //tray rebooted\n{\n    \n}\nif (deviceInit == 2) //device rebooted\n{\n    \n}\n\nvar msgs = [];\nmsgs[0] = {\"address\":0,\"value\":0};\n//must be the last!\nmsgs[1] = {\"address\":-1,\"value\":0};\nreturn {topic : 'initDevice', payload: msgs};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 60,
        "wires": [
            [
                "ebb5481bd4277b24"
            ]
        ]
    },
    {
        "id": "352395cfbb5c4259",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "g": "cc88dacde90c32cd",
        "name": "Create Readings",
        "func": "var tray = global.get('tray');\nvar newData = true;\ntray.gauge1.value        = Math.round(1000*(-3.4248 + 30.229 * msg.payload[1] / 1024)) / 1000;\ntray.gauge2.value        = Math.round(1000*(-3.4324 + 30.204 * msg.payload[2] / 1024)) / 1000;\ntray.gauge3.value        = Math.round(1000*(-9.2284 + 50.191 * msg.payload[3] / 1024)) / 1000;\ntray.gauge4.value        = Math.round(1000*(-9.2547 + 50.529 * msg.payload[4] / 1024)) / 1000;\ntray.turboSpeed1.value   = msg.payload[5];\ntray.turboNoError1.value = msg.payload[6];\ntray.turboSpeed2.value   = msg.payload[7];\ntray.turboNoError2.value = msg.payload[8];\ntray.gate1Open.value     = msg.payload[9];\ntray.gate1Closed.value   = msg.payload[10];\ntray.gate2Open.value     = msg.payload[11];\ntray.gate2Closed.value   = msg.payload[12];\ntray.openGate.value      = msg.payload[13];\ntray.watchdog.value      = msg.payload[14];\n\ntray.startTurboOK.value = 0;\nif ((tray.gauge1.value < 2.0) && (tray.gauge2.value < 2.0) && (tray.gauge3.value < 2.0) && (tray.gauge4.value < 2.0) )\n{\n    tray.startTurboOK.value = 1;\n}\n\nreturn  {topic:msg.topic, payload:newData}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 640,
        "wires": [
            [
                "48467ee1b54e0d4c"
            ]
        ]
    },
    {
        "id": "fcc98447c16c3949",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "g": "24d6701c4857e25e",
        "name": "Create Setting",
        "func": "var tray = global.get('tray');\nvar blinkyBusSettingMsg = \n{\n    topic : msg.topic, \n    payload : { value: msg.payload.value,  'address': -1  } \n}\nvar blinkyBusMessage = false;\nswitch(msg.payload.cube)\n{\n    case 'openGate':\n        if ( (tray.gauge1.alarm.value > 2 ) || (tray.gauge2.alarm.value > 2 ) ) blinkyBusSettingMsg.payload.value = 0;\n        blinkyBusSettingMsg.payload.address = 13;\n        blinkyBusMessage = true;\n        break;\n    case 'nonblinkyBusSetting':\n        tray.nonblinkyBusSetting.value  = msg.payload.value;\n        blinkyBusMessage = false;\n        break;\n    default:\n        break;\n}\nvar msgArray = [null,null,null];\nif (blinkyBusMessage)\n{\n    global.set('settingInProgress',true);\n    var settingInProgressMsg = {topic:'settingInProgress', payload:true};\n    msgArray = [blinkyBusSettingMsg, settingInProgressMsg, null];\n    \n}\nelse\n{\n    global.set('settingInProgress',false);\n    msgArray = [null,null,{topic:'settingDone', payload:true}];\n}\nreturn msgArray;",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 380,
        "wires": [
            [
                "3744a97333f32473"
            ],
            [
                "a66ef2e5b482662a"
            ],
            [
                "1e34df4b19ff22cc"
            ]
        ]
    },
    {
        "id": "3026811a11de85fd",
        "type": "serial out",
        "z": "85e21fcb925ef32f",
        "name": "BlinkyBus Out",
        "serial": "a4f4c59daf894823",
        "x": 350,
        "y": 1000,
        "wires": []
    },
    {
        "id": "930cf5038252d1fd",
        "type": "serial in",
        "z": "85e21fcb925ef32f",
        "name": "BlinkyBus In",
        "serial": "a4f4c59daf894823",
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "1fc86ac13df1a13f"
            ]
        ]
    },
    {
        "id": "9f8c3b4630e734a3",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "New Setting Out",
        "mode": "link",
        "links": [
            "04d132d87ffeb91a"
        ],
        "x": 1255,
        "y": 660,
        "wires": []
    },
    {
        "id": "48467ee1b54e0d4c",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Check for Permit",
        "func": "var tray = global.get('tray');\ntray.permit.value = 1;\nif (scalarAlarmScan(tray, 'reading')) tray.permit.value = 0;\nif (scalarAlarmScan(tray, 'setting')) tray.permit.value = 0;\n\nreturn msg;\nfunction getActionArray(tray, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(tray);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (tray[keys[ii]].hasOwnProperty('type'))\n        {\n            if (tray[keys[ii]].type == type)\n            {\n                if (tray[keys[ii]].action == actionType)\n                {\n                    actionArray.push(tray[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(tray, actionType)\n{\n    var alarmFlag = false;\n    var actionArray = getActionArray(tray, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value <= actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value >= actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n                if (actionArray[ii].alarm.value > 2) alarmFlag = true;\n            }\n        }\n    }\n    return alarmFlag;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            [
                "99fbe8135d0ce161"
            ]
        ]
    },
    {
        "id": "ef7189156ac81e3c",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Exhaust alarm",
        "func": "var tray = global.get('tray');\nif ( (tray.gauge1.alarm.value > 2 ) || (tray.gauge2.alarm.value > 2 ) )\n{\n    if ((tray.gate1Open.value > 0 ) || (tray.gate2Open.value > 0 ) )\n    {\n        return {topic:'setting', payload:{cube:'openGate',value:0}};\n    }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 540,
        "wires": [
            [
                "9f8cc473cc73f355"
            ]
        ]
    },
    {
        "id": "9f8cc473cc73f355",
        "type": "link out",
        "z": "85e21fcb925ef32f",
        "name": "Exhaust Alarm out",
        "mode": "link",
        "links": [
            "4bddb9a0e424ebf4"
        ],
        "x": 1565,
        "y": 560,
        "wires": []
    },
    {
        "id": "bad8b154e55bac26",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "Check for turbo going down",
        "func": "var tray = global.get('tray');\nturboState = context.get('turboState');\nlet downtransition = false;\nif ((tray.turboSpeed1.value == 0) && (turboState.turboSpeed1 == 1)) downtransition = true;\nif ((tray.turboSpeed2.value == 0) && (turboState.turboSpeed2 == 1)) downtransition = true;\nif ((tray.turboNoError1.value == 0) && (turboState.turboNoError1 == 1)) downtransition = true;\nif ((tray.turboNoError2.value == 0) && (turboState.turboNoError2 == 1)) downtransition = true;\nturboState.turboSpeed1 = tray.turboSpeed1.value;\nturboState.turboSpeed2 = tray.turboSpeed2.value;\nturboState.turboNoError1 = tray.turboNoError1.value;\nturboState.turboNoError2 = tray.turboNoError2.value;\nif (downtransition)\n{\n    if ((tray.gate1Open.value > 0 ) || (tray.gate2Open.value > 0 ) )\n    {\n        return {topic:'setting', payload:{cube:'openGate',value:0}};\n    }\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nlet turboState = \n{\n    turboSpeed1 : 0,\n    turboSpeed2 : 0,\n    turboNoError1 : 0,\n    turboNoError2 : 0\n}\ncontext.set('turboState', turboState);",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 580,
        "wires": [
            [
                "9f8cc473cc73f355"
            ]
        ]
    },
    {
        "id": "be17ae16590db703",
        "type": "function",
        "z": "85e21fcb925ef32f",
        "name": "PostMortem",
        "func": "var trayCopy = JSON.parse(JSON.stringify(global.get('tray')));\ntrayCopy['postMortem'] = msg.payload;\nvar newMsg = \n{\n    topic: global.get('trayProps').box + '/' + global.get('trayProps').type + '/' + global.get('trayProps').name + '/postMortem',\n    payload: JSON.stringify(trayCopy)\n};\nreturn  newMsg;  \n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\ncontext.set('lastArchive', new Date().getTime());",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 300,
        "wires": [
            [
                "9821863aa7bc3a2e"
            ]
        ]
    },
    {
        "id": "9821863aa7bc3a2e",
        "type": "mqtt out",
        "z": "85e21fcb925ef32f",
        "name": "Publish Post Mortem",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "79250bf3.365cc4",
        "x": 1040,
        "y": 260,
        "wires": []
    }
]